buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.1'

        // Android apt (without this, .java files are generated in classes dir instead of generated sources dir)
        // resulting in errors IDE
//        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'

        // Desktop apt (without this, .java files are generated in classes dir instead of generated sources dir)
        // resulting in errors IDE
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.4"

     }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = 'MultipleStagesExample'
        gdxVersion = '1.5.2'
        roboVMVersion = '1.0.0-beta-01'
        box2DLightsVersion = '1.3'
        ashleyVersion = '1.3.1'
        aiVersion = '1.4.0'
        daggerVersion = '2.0.2'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"
//    apply plugin: "net.ltgt.apt"
    apply plugin: 'idea' // plugin needed to make IDEA see build/generated/source/apt/main as sourcefolder.
//    apply plugin: 'com.neenbedankt.android-apt'

    configurations {
        provided
    }

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
//        provided "org.glassfish:javax.annotation:10.0-b28"
//        provided "javax.annotation:jsr250-api:1.0" // Needed for @Generated annotation (missing in Java <= 1.6; therefore, Android)
//        apt "com.google.dagger:dagger-compiler:2.0.1"
//        compile 'com.google.dagger:dagger:2.0.1'
//        provided 'com.google.dagger:dagger-compiler:2.0.1'
//        provided 'org.glassfish:javax.annotation:10.0-b28'
    }
}

project(":android") {
    apply plugin: "android"
//    apply plugin: "com.android.application"
//    apply plugin: "com.neenbedankt.android-apt"
//    apply plugin: 'com.neenbedankt.android-apt'

    configurations {
        natives
        provided
    }

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
//        provided "org.glassfish:javax.annotation:10.0-b28"
//        provided "javax.annotation:jsr250-api:1.0" // Needed for @Generated annotation (missing in Java <= 1.6; therefore, Android)
//        apt "com.google.dagger:dagger-compiler:2.0.1"
    }
}

project(":core") {
    apply plugin: "java"
    apply plugin: "net.ltgt.apt"

    configurations {
        provided
    }

    sourceSets.test.java.srcDirs = ["test/"]
    sourceSets.test.resources.srcDirs = ["test/resources/"]

    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion",
                "org.slf4j:slf4j-api:1.7.2", // Using sfl4j allows us to replace different loggers later, if desired
                "ch.qos.logback:logback-classic:1.0.9", // sfl4j is just a facade for loggers. To actually get logging to work, you need to
                "ch.qos.logback:logback-core:1.0.9" // tie it in with some actual implementation, e.g., logback
//        ,
//                "org.apache.logging.log4j:log4j-api:2.2",
//                "org.apache.logging.log4j:log4j-core:2.2"

//        compile group: "com.google.code.guice", name: "guice", version: '3.0'

        compile "com.google.dagger:dagger:$daggerVersion"
        apt "com.google.dagger:dagger-compiler:$daggerVersion"

        testCompile "junit:junit:+",
                    "org.powermock:powermock-core:+",
                    "org.powermock:powermock-module-junit4:+",
                    "org.powermock:powermock-api-mockito:+",
                    "org.easymock:easymock:+"

    }
}

tasks.eclipse.doLast {
    delete ".project"
}